package ClassDiagramToCode;

import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Fhad Khan
 */
public class DesignView extends javax.swing.JFrame {

   
    public DesignView() {
        initComponents();
        data = new String();
        
        /** Initializing ArrayList(s) */ 
        className= new ArrayList<String>();
        dataMembers=new ArrayList<String>();
        attributesName=new ArrayList<String>();
        methodNames=new ArrayList<String>();
        interfaceMethods=new ArrayList<String>();
        interfaceMethodSignature=new ArrayList<String>();
        
        /** Setting Visibility of Frames */ 
        Frame_AddingAttribute.setVisible(false);
        Frame_dataMember.setVisible(false);
        Frame_AddingMethod.setVisible(false);
        Frame_ClassName.setVisible(false);
        Frame_codeName.setVisible(false);
        Frame_relation.setVisible(false);
        Frame_codeName.setVisible(false);
    }

      

    public void addDataMember(){                                                   // adding dataMembers
        String returnType=ComboBox_RT_dataMember.getSelectedItem().toString(); 
        String type=ComboBox_T_DataMember.getSelectedItem().toString();        
        String name=textfiled_n_DataMember.getText();
        String pattren="^[a-zA-Z]+|[a-zA-Z]+([a-zA-Z0-9]+)$";
        Pattern p=Pattern.compile(pattren);
        Matcher matcher=p.matcher(name);
        
        if(matcher.matches()==false){
            textfield_errorStream.setText("ERROR Message: Enter a Valid Data Member !! ");
        }else if(name.equals("")){
            textfield_errorStream.setText("ERROR Message: Enter The Data Member Name !! ");
        }else if(dataMembers.contains(name)){
            textfield_errorStream.setText("ERROR Message: Multiple Same Data Member Names Are Not Allowed !!");
        }else{
            if(CheckBox_dataMember.isEnabled()){                                            // if static check box is clicked
                data="\t"+type+space+"static"+space+returnType+space+name+semiColon+"\n"; 
                try{
                    file.write(data.getBytes());
                }catch(Exception e){
                    e.getMessage();
                }
            }else{
                data="\t"+type+space+returnType+space+name+semiColon+"\n"; // if static check box is not clicked
                try{
                    file.write(data.getBytes());
                }catch(Exception e){
                    e.getMessage();
                }
            }
                textfield_errorStream.setText("MESSAGE: Data Member Added Sucssesfully !!");
                dataMembers.add(name);            
        }  
    }
    
    public void EditedContents(String content){                                  // edit file contens
        editContent=content;
    }
    
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_designView = new javax.swing.JLabel();
        button_addRelation = new javax.swing.JButton();
        button_addMethods = new javax.swing.JButton();
        button_addDataMember = new javax.swing.JButton();
        button_addClass = new javax.swing.JButton();
        Frame_ClassName = new javax.swing.JInternalFrame();
        ComboBox_type = new javax.swing.JComboBox();
        textfiled_name = new javax.swing.JTextField();
        button_add = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        textfield_errorStream = new javax.swing.JTextField();
        Frame_dataMember = new javax.swing.JInternalFrame();
        ComboBox_T_DataMember = new javax.swing.JComboBox();
        ComboBox_RT_dataMember = new javax.swing.JComboBox();
        textfiled_n_DataMember = new javax.swing.JTextField();
        button_A_dataMember = new javax.swing.JButton();
        button_F_dataMember = new javax.swing.JButton();
        CheckBox_dataMember = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        button_buildClass = new javax.swing.JButton();
        Frame_AddingMethod = new javax.swing.JInternalFrame();
        ComboBox_T_method = new javax.swing.JComboBox();
        ComboBox_RT_method = new javax.swing.JComboBox();
        textfiled_N_method = new javax.swing.JTextField();
        button_AM_method = new javax.swing.JButton();
        button_AP_method = new javax.swing.JButton();
        button_f_method = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Frame_AddingAttribute = new javax.swing.JInternalFrame();
        ComboBox_RT_parameter = new javax.swing.JComboBox();
        textfiled_N_parameter = new javax.swing.JTextField();
        button_A_parameter = new javax.swing.JButton();
        button_f_parameter = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Frame_codeName = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        button_saveCode = new javax.swing.JButton();
        textfield_codeName = new javax.swing.JTextField();
        Frame_relation = new javax.swing.JInternalFrame();
        button_r_create = new javax.swing.JButton();
        ComboBox_className_releation = new javax.swing.JComboBox();
        ComboBox_classNameSecond_releation = new javax.swing.JComboBox();
        ComboBox_Type_relation = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        button_r_finish = new javax.swing.JButton();
        button_generateCode = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_File = new javax.swing.JMenu();
        menuItem_CreateNew = new javax.swing.JMenuItem();
        menuItem_open = new javax.swing.JMenuItem();
        menuItem_edit = new javax.swing.JMenuItem();
        menuItem_exit = new javax.swing.JMenuItem();
        menu_Help = new javax.swing.JMenu();
        menuItem_help = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Design View");
        setResizable(false);

        label_designView.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label_designView.setText("Design View");

        button_addRelation.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        button_addRelation.setText("Add Relation");
        button_addRelation.setEnabled(false);
        button_addRelation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addRelationActionPerformed(evt);
            }
        });

        button_addMethods.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        button_addMethods.setText("Add methods");
        button_addMethods.setEnabled(false);
        button_addMethods.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addMethodsActionPerformed(evt);
            }
        });

        button_addDataMember.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        button_addDataMember.setText("Add Data Member");
        button_addDataMember.setEnabled(false);
        button_addDataMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addDataMemberActionPerformed(evt);
            }
        });

        button_addClass.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        button_addClass.setText("Add Class");
        button_addClass.setEnabled(false);
        button_addClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addClassActionPerformed(evt);
            }
        });
        button_addClass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                button_addClassKeyPressed(evt);
            }
        });

        Frame_ClassName.setClosable(true);
        Frame_ClassName.setTitle("Adding Interface/Class Name");
        Frame_ClassName.setVisible(true);

        ComboBox_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "class", "interface", "abstract" }));
        ComboBox_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_typeActionPerformed(evt);
            }
        });

        textfiled_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfiled_nameActionPerformed(evt);
            }
        });

        button_add.setText("Add Class");
        button_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_addActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel2.setText("Class Name");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel3.setText("Class Type");

        javax.swing.GroupLayout Frame_ClassNameLayout = new javax.swing.GroupLayout(Frame_ClassName.getContentPane());
        Frame_ClassName.getContentPane().setLayout(Frame_ClassNameLayout);
        Frame_ClassNameLayout.setHorizontalGroup(
            Frame_ClassNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Frame_ClassNameLayout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addGroup(Frame_ClassNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBox_type, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Frame_ClassNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Frame_ClassNameLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Frame_ClassNameLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(button_add))
                    .addComponent(textfiled_name))
                .addContainerGap())
        );
        Frame_ClassNameLayout.setVerticalGroup(
            Frame_ClassNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Frame_ClassNameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Frame_ClassNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Frame_ClassNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfiled_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(button_add)
                .addContainerGap())
        );

        textfield_errorStream.setEditable(false);
        textfield_errorStream.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textfield_errorStream)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textfield_errorStream, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        Frame_dataMember.setClosable(true);
        Frame_dataMember.setTitle("Adding Data Member");
        Frame_dataMember.setVisible(true);

        ComboBox_T_DataMember.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "public", "private", "protected" }));

        ComboBox_RT_dataMember.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "int", "double", "long", "String" }));
        ComboBox_RT_dataMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_RT_dataMemberActionPerformed(evt);
            }
        });

        textfiled_n_DataMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfiled_n_DataMemberActionPerformed(evt);
            }
        });

        button_A_dataMember.setText("Add Data Member");
        button_A_dataMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_A_dataMemberActionPerformed(evt);
            }
        });

        button_F_dataMember.setText("Finish");
        button_F_dataMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_F_dataMemberActionPerformed(evt);
            }
        });

        CheckBox_dataMember.setText("Static");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel7.setText("Data Memeber Type");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel8.setText("Data Member Return Type");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel9.setText("Data Memeber Name");

        javax.swing.GroupLayout Frame_dataMemberLayout = new javax.swing.GroupLayout(Frame_dataMember.getContentPane());
        Frame_dataMember.getContentPane().setLayout(Frame_dataMemberLayout);
        Frame_dataMemberLayout.setHorizontalGroup(
            Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Frame_dataMemberLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Frame_dataMemberLayout.createSequentialGroup()
                        .addGroup(Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBox_T_DataMember, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBox_RT_dataMember, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(textfiled_n_DataMember, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Frame_dataMemberLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CheckBox_dataMember, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Frame_dataMemberLayout.createSequentialGroup()
                                .addComponent(button_F_dataMember)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(button_A_dataMember)))))
                .addContainerGap())
        );
        Frame_dataMemberLayout.setVerticalGroup(
            Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Frame_dataMemberLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox_T_DataMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_RT_dataMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfiled_n_DataMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CheckBox_dataMember)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Frame_dataMemberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_A_dataMember)
                    .addComponent(button_F_dataMember)))
        );

        button_buildClass.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        button_buildClass.setText("Build Class");
        button_buildClass.setEnabled(false);
        button_buildClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_buildClassActionPerformed(evt);
            }
        });

        Frame_AddingMethod.setClosable(true);
        Frame_AddingMethod.setTitle("Adding Method");
        Frame_AddingMethod.setMaximumSize(new java.awt.Dimension(380, 180));
        Frame_AddingMethod.setVisible(true);

        ComboBox_T_method.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "public", "private", "protected" }));
        ComboBox_T_method.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_T_methodActionPerformed(evt);
            }
        });

        ComboBox_RT_method.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "void", "int", "double", "long", "String", "float" }));
        ComboBox_RT_method.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_RT_methodActionPerformed(evt);
            }
        });

        textfiled_N_method.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfiled_N_methodActionPerformed(evt);
            }
        });

        button_AM_method.setText("Add Method");
        button_AM_method.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_AM_methodActionPerformed(evt);
            }
        });

        button_AP_method.setText("Add parameter");
        button_AP_method.setEnabled(false);
        button_AP_method.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_AP_methodActionPerformed(evt);
            }
        });

        button_f_method.setText("Finish");
        button_f_method.setEnabled(false);
        button_f_method.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_f_methodActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel4.setText("Method Type");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel5.setText("Method Return Type");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel6.setText("Method Name");

        javax.swing.GroupLayout Frame_AddingMethodLayout = new javax.swing.GroupLayout(Frame_AddingMethod.getContentPane());
        Frame_AddingMethod.getContentPane().setLayout(Frame_AddingMethodLayout);
        Frame_AddingMethodLayout.setHorizontalGroup(
            Frame_AddingMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Frame_AddingMethodLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Frame_AddingMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Frame_AddingMethodLayout.createSequentialGroup()
                        .addComponent(button_f_method)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(button_AP_method))
                    .addGroup(Frame_AddingMethodLayout.createSequentialGroup()
                        .addGroup(Frame_AddingMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Frame_AddingMethodLayout.createSequentialGroup()
                                .addComponent(ComboBox_T_method, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Frame_AddingMethodLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(60, 60, 60)))
                        .addGroup(Frame_AddingMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(ComboBox_RT_method, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(Frame_AddingMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(button_AM_method, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textfiled_N_method)
                    .addComponent(jLabel6)))
        );
        Frame_AddingMethodLayout.setVerticalGroup(
            Frame_AddingMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Frame_AddingMethodLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Frame_AddingMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Frame_AddingMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox_T_method, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_RT_method, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfiled_N_method, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Frame_AddingMethodLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_AM_method)
                    .addComponent(button_AP_method)
                    .addComponent(button_f_method))
                .addContainerGap())
        );

        Frame_AddingAttribute.setClosable(true);
        Frame_AddingAttribute.setTitle("Adding Parameters");
        Frame_AddingAttribute.setVisible(true);

        ComboBox_RT_parameter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "int", "double", "long", "String" }));
        ComboBox_RT_parameter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_RT_parameterActionPerformed(evt);
            }
        });

        textfiled_N_parameter.setEditable(false);
        textfiled_N_parameter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfiled_N_parameterActionPerformed(evt);
            }
        });

        button_A_parameter.setText("Add Parameter");
        button_A_parameter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_A_parameterActionPerformed(evt);
            }
        });

        button_f_parameter.setText("Finish");
        button_f_parameter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_f_parameterActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel10.setText("Parameter Return Type");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel11.setText("Parameter Name");

        javax.swing.GroupLayout Frame_AddingAttributeLayout = new javax.swing.GroupLayout(Frame_AddingAttribute.getContentPane());
        Frame_AddingAttribute.getContentPane().setLayout(Frame_AddingAttributeLayout);
        Frame_AddingAttributeLayout.setHorizontalGroup(
            Frame_AddingAttributeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Frame_AddingAttributeLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(Frame_AddingAttributeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Frame_AddingAttributeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(button_f_parameter, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ComboBox_RT_parameter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(Frame_AddingAttributeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(Frame_AddingAttributeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(button_A_parameter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(textfiled_N_parameter)))
                .addGap(20, 20, 20))
        );
        Frame_AddingAttributeLayout.setVerticalGroup(
            Frame_AddingAttributeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Frame_AddingAttributeLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(Frame_AddingAttributeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Frame_AddingAttributeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox_RT_parameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfiled_N_parameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(Frame_AddingAttributeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_A_parameter)
                    .addComponent(button_f_parameter))
                .addContainerGap())
        );

        Frame_codeName.setClosable(true);
        Frame_codeName.setTitle("File Name");
        Frame_codeName.setVisible(true);

        jLabel1.setText("File Name");

        button_saveCode.setText("save");
        button_saveCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_saveCodeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Frame_codeNameLayout = new javax.swing.GroupLayout(Frame_codeName.getContentPane());
        Frame_codeName.getContentPane().setLayout(Frame_codeNameLayout);
        Frame_codeNameLayout.setHorizontalGroup(
            Frame_codeNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Frame_codeNameLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textfield_codeName, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(button_saveCode, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        Frame_codeNameLayout.setVerticalGroup(
            Frame_codeNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Frame_codeNameLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addGroup(Frame_codeNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_saveCode)
                    .addComponent(jLabel1)
                    .addComponent(textfield_codeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        Frame_relation.setClosable(true);
        Frame_relation.setTitle("Adding Relation ");
        Frame_relation.setVisible(true);

        button_r_create.setText("Create");
        button_r_create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_r_createActionPerformed(evt);
            }
        });

        ComboBox_className_releation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox_className_releationActionPerformed(evt);
            }
        });

        ComboBox_Type_relation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Composition", "Inheritance", "Aggregation", "Realization", "Association" }));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel12.setText("SecondClass");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel13.setText("Relationship");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 10)); // NOI18N
        jLabel14.setText("First Class");

        button_r_finish.setText("Finish");
        button_r_finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_r_finishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Frame_relationLayout = new javax.swing.GroupLayout(Frame_relation.getContentPane());
        Frame_relation.getContentPane().setLayout(Frame_relationLayout);
        Frame_relationLayout.setHorizontalGroup(
            Frame_relationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Frame_relationLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(Frame_relationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(ComboBox_classNameSecond_releation, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Frame_relationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBox_Type_relation, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Frame_relationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(ComboBox_className_releation, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Frame_relationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_r_finish)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_r_create)
                .addContainerGap())
        );
        Frame_relationLayout.setVerticalGroup(
            Frame_relationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Frame_relationLayout.createSequentialGroup()
                .addGroup(Frame_relationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Frame_relationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox_Type_relation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_classNameSecond_releation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox_className_releation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Frame_relationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_r_create, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_r_finish, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        button_generateCode.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        button_generateCode.setText("Generate Code");
        button_generateCode.setEnabled(false);
        button_generateCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_generateCodeActionPerformed(evt);
            }
        });

        menu_File.setText("File");
        menu_File.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_FileActionPerformed(evt);
            }
        });

        menuItem_CreateNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuItem_CreateNew.setText("New");
        menuItem_CreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_CreateNewActionPerformed(evt);
            }
        });
        menu_File.add(menuItem_CreateNew);

        menuItem_open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuItem_open.setText("Open");
        menuItem_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_openActionPerformed(evt);
            }
        });
        menu_File.add(menuItem_open);

        menuItem_edit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuItem_edit.setText("Edit");
        menuItem_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_editActionPerformed(evt);
            }
        });
        menu_File.add(menuItem_edit);

        menuItem_exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuItem_exit.setText("Exit");
        menuItem_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_exitActionPerformed(evt);
            }
        });
        menu_File.add(menuItem_exit);

        jMenuBar1.add(menu_File);

        menu_Help.setText("Help");

        menuItem_help.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        menuItem_help.setText("Help");
        menuItem_help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_helpActionPerformed(evt);
            }
        });
        menu_Help.add(menuItem_help);

        jMenuBar1.add(menu_Help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Frame_ClassName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Frame_AddingMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(83, Short.MAX_VALUE)
                        .addComponent(button_addClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_addDataMember)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_addMethods)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_addRelation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_buildClass)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_generateCode))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Frame_codeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Frame_relation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Frame_dataMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Frame_AddingAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(304, 304, 304)
                                .addComponent(label_designView)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_designView)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_addClass, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_addDataMember, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_addMethods, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_addRelation, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_buildClass, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_generateCode, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Frame_ClassName)
                    .addComponent(Frame_AddingMethod, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Frame_dataMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Frame_AddingAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Frame_relation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Frame_codeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        try {
            Frame_ClassName.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        try {
            Frame_AddingMethod.setMaximum(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    private void button_addDataMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addDataMemberActionPerformed
        Frame_dataMember.setVisible(true);
    }//GEN-LAST:event_button_addDataMemberActionPerformed

    private void button_addMethodsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addMethodsActionPerformed
        button_f_method.setEnabled(false);
        Frame_AddingMethod.setVisible(true);
        
    }//GEN-LAST:event_button_addMethodsActionPerformed

    private void button_addClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addClassActionPerformed
            /** Setting the visibility of frames/button */
            
            button_buildClass.setEnabled(false);
            button_generateCode.setEnabled(false);
            button_addRelation.setEnabled(false);
            textfiled_name.setText(null);
            Frame_ClassName.setVisible(true);   
            
    }//GEN-LAST:event_button_addClassActionPerformed

    private void button_addRelationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addRelationActionPerformed
        Frame_relation.setVisible(true);
        int length=className.size(); int count=0;
        String test=null;
        while(length!=count){
            ComboBox_className_releation.addItem(className.get(count));
            test=className.get(count);
            Pattern p=Pattern.compile("interface",Pattern.CASE_INSENSITIVE);
            Matcher m=p.matcher(test);
            Pattern pattern=Pattern.compile("abstract",Pattern.CASE_INSENSITIVE);
            Matcher matcher=pattern.matcher(test);
                        
            if(m.find()||matcher.find()){
                count++;
             }else{
                ComboBox_classNameSecond_releation.addItem(className.get(count));
                count++;
            }            
        }
    }//GEN-LAST:event_button_addRelationActionPerformed

    private void button_buildClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_buildClassActionPerformed
           try{
            if(fileNameEdit!=null){
//               try{
//                String contentValue = new Scanner(new File("E:\\UCP\\FYP\\Source Code\\ClassDiagramToCode\\src\\Resources\\"+fileNameEdit)).useDelimiter("\\Z").next();
//                System.out.println(contentValue);
//                FileOutputStream fileTest=new FileOutputStream("E:\\UCP\\FYP\\Source Code\\ClassDiagramToCode\\"+fileNameEdit);
//                fileTest.write(contentValue.getBytes());
//               }catch(Exception e){
//                   e.getMessage();
//               }
                int check=CodeViewClass.mainFunction(fileNameEdit);
                if(check ==1){
                    textfield_errorStream.setText(new Scanner(new File("E:\\UCP\\FYP\\Source Code\\ClassDiagramToCode\\src\\Resources\\errors.txt")).useDelimiter("\\Z").next());
                }
             }else if(openPath!=null){
                int check=CodeViewClass.mainFunction(openPath);
                if(check ==1){
                    textfield_errorStream.setText(new Scanner(new File("E:\\UCP\\FYP\\Source Code\\ClassDiagramToCode\\src\\Resources\\errors.txt")).useDelimiter("\\Z").next());
                }
            }else{
                int check=CodeViewClass.mainFunction(editPath);
                if(check ==1){
                    textfield_errorStream.setText(new Scanner(new File("E:\\UCP\\FYP\\Source Code\\ClassDiagramToCode\\src\\Resources\\errors.txt")).useDelimiter("\\Z").next());
                }
            }
           }catch(Exception e){
               e.getMessage();
           }
    }//GEN-LAST:event_button_buildClassActionPerformed

    private void menu_FileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_FileActionPerformed
    
    }//GEN-LAST:event_menu_FileActionPerformed

    private void menuItem_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_exitActionPerformed
        dispose();
    }//GEN-LAST:event_menuItem_exitActionPerformed

    private void menuItem_CreateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_CreateNewActionPerformed
     Frame_codeName.setVisible(true);
     Frame_codeName.getRootPane().setDefaultButton(button_saveCode);           
    }//GEN-LAST:event_menuItem_CreateNewActionPerformed

    private void button_addClassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_button_addClassKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER){
//           button_addClassActionPerformed();
       }
    }//GEN-LAST:event_button_addClassKeyPressed

    private void menuItem_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_openActionPerformed
      JFileChooser choice=new JFileChooser();
      int option= choice.showOpenDialog(this);
      if(option== JFileChooser.APPROVE_OPTION){                              // If open button is clicked
          File file=choice.getSelectedFile();
          openPath=file.getPath();
          if(openPath.contains(".java")){
              try{
                 content = new Scanner(new File(file.getPath())).useDelimiter("\\Z").next();    // getting the contents of files
//                fileInput= new FileInputStream(file.getPath());                                      //  FileInputStream
                button_buildClass.setEnabled(true);                                         // buildClass Button Enabled
                button_generateCode.setEnabled(true);                                         // GenerateCode Button Enabled
                textfield_errorStream.setText("Message: File Meta-data Created SucussFully !! ");
              }catch(Exception e){
                  e.getMessage();
              }
          }else{
              textfield_errorStream.setText("ERROR: File Extension Mismatch!! ");
          }          
      }else if(option==JFileChooser.CANCEL_OPTION){                                     // If Close button/ Cross button clicked
          JOptionPane.showMessageDialog(this,"Cancel Dialouge", "Cancel", 1 );
      }else{}
    }//GEN-LAST:event_menuItem_openActionPerformed

    private void menuItem_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_editActionPerformed
      JFileChooser choice=new JFileChooser();
      int option= choice.showOpenDialog(this);
      if(option== JFileChooser.APPROVE_OPTION){                                              // If open button is clicked
          File file=choice.getSelectedFile();
          editPath=file.getPath();
          if(editPath.contains(".java")){
              try{
                String content = new Scanner(new File(file.getPath())).useDelimiter("\\Z").next();    // getting the contents of files
                EditFile obj=new EditFile();                                                // Object Created for EditFile
                obj.setVisible(true);
                obj.setValues(content,file.getPath());
                button_buildClass.setEnabled(true);                                         // buildClass Button Enabled 
                button_generateCode.setEnabled(true);
                textfield_errorStream.setText("Message: File Opened SucussFully !! ");
              }catch(Exception e){
                  e.getMessage();
              }
          }else{
              textfield_errorStream.setText("ERROR: File Extension Mismatch!! ");
          }          
      }else if(option==JFileChooser.CANCEL_OPTION){                                        // If Close/Cross button is clicked
          JOptionPane.showMessageDialog(this,"Cancel Dialouge", "Cancel", 1 );
      }else{}
    }//GEN-LAST:event_menuItem_editActionPerformed

    private void ComboBox_className_releationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_className_releationActionPerformed
        String selectedString=ComboBox_className_releation.getSelectedItem().toString();
        /** For Interface */
        Pattern p=Pattern.compile("interface",Pattern.CASE_INSENSITIVE);
        Matcher m=p.matcher(selectedString);
        /** For Abstract */
        Pattern pattern=Pattern.compile("abstract",Pattern.CASE_INSENSITIVE);
        Matcher matcher=pattern.matcher(selectedString);

        ComboBox_Type_relation.setEnabled(true);
        if(m.find()){
            ComboBox_Type_relation.setSelectedItem(ComboBox_Type_relation.getItemAt(3));
            ComboBox_Type_relation.setEnabled(false);
        }else if(matcher.find()){
            ComboBox_Type_relation.setSelectedItem(ComboBox_Type_relation.getItemAt(1));
            ComboBox_Type_relation.setEnabled(false);
        }
    }//GEN-LAST:event_ComboBox_className_releationActionPerformed

    private void button_r_createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_r_createActionPerformed
        String className=ComboBox_className_releation.getSelectedItem().toString();
        String classNameSecond=ComboBox_classNameSecond_releation.getSelectedItem().toString();
        String relation=ComboBox_Type_relation.getSelectedItem().toString();
        String pattern=null,newString=null,interfaceSig=null;
        int count=0;
        
        try{
            content = new Scanner(new File(fileName)).useDelimiter("\\Z").next();
        }catch(Exception e){}

        if((relation.equals("Composition"))||(relation.equals("Aggregation"))){  /** Composition || aggregation **/
            pattern=classNameSecond+"{";
            if(content.contains(pattern)){
                newString=classNameSecond+"{"+"\n\t"+className+space+"obj"+className+semiColon;
                try{
                    content=content.replace(pattern,newString);

                    /*** deleting old content of file */
                    file.close();
                    file =new FileOutputStream(fileName);

                    file.write(content.getBytes());
                }catch(Exception e){}
//                Frame_relation.setVisible(false);                           // Disable Frame relation
                button_addRelation.setEnabled(false);                       // Disable add relation button  
                textfield_errorStream.setText("Message: Relationship Added SuccessFully !! ");
            }else{
                textfield_errorStream.setText("ERROR: Error Creating Releation ");
            }
        }else if(relation.equals("Inheritance")){                   /** Inheritance **/
            if(className.contains("Abstract")){
                pattern=classNameSecond+"{";
                if(content.contains(pattern)){
                    className=className.substring(0,(className.length())-8);
                    newString=classNameSecond+space+"extends"+space+className+"{";
                    
                    /*** Abstract @Override Functions */                    
                    String rawData=null;
                    for(int i=0;i<interfaceMethodSignature.size()-1;i++){
                        if(interfaceMethodSignature.get(i).contains("abstract")){
                            rawData=interfaceMethodSignature.get(i).substring(0,7);
                            rawData+=interfaceMethodSignature.get(i).substring(16,interfaceMethodSignature.get(i).length());
                            if(count==0){
                                interfaceSig="\n\n\t @Override\n"+rawData;
                                count++;
                            }else{
                                interfaceSig+=("\n"+rawData);
                            }
                        }else{}
                    }
                    newString+=interfaceSig;
                    
                    /** END @Override */
                    try{
                        content=content.replace(pattern,newString);

                        /*** Deleting old content of file */
                        
                        file.close();
                        file =new FileOutputStream(fileName);
                        file.write(content.getBytes());
                    }catch(Exception e){}
//                    Frame_relation.setVisible(false);                           // Disable Frame relation
                    button_addRelation.setEnabled(false);                       // Disable add relation button  
                    textfield_errorStream.setText("Message: Relationship Added SuccessFully !! ");
                }else{
                    textfield_errorStream.setText("ERROR: Error Creating Releation ");
                }
            }else{
               pattern=classNameSecond+"{";
                    if(content.contains(pattern)){
                        className=className.substring(0,(className.length())-8);
                        newString=classNameSecond+space+"extends"+space+className+"{";
                        try{
                            content=content.replace(pattern,newString);

                            /*** deleting old content of file */
                            file.close();
                            file =new FileOutputStream(fileName);

                            file.write(content.getBytes());
                        }catch(Exception e){}
//                        Frame_relation.setVisible(false);                           // Disable Frame relation
                        button_addRelation.setEnabled(false);                       // Disable add relation button  
                        textfield_errorStream.setText("Message: Relationship Added SuccessFully !! ");
                    }else{
                        textfield_errorStream.setText("ERROR: Error Creating Releation ");
                    }
            }

        }else if(relation.equals("Association")){                   /** Association **/
            pattern=classNameSecond+"{";
            if(content.contains(pattern)){
                newString=classNameSecond+"{"+"\n\t"+className+space+"obj"+className+"[]"+semiColon;
                try{
                    content=content.replace(pattern,newString);

                    /*** deleting old content of file */
                    file.close();
                    file =new FileOutputStream(fileName);

                    file.write(content.getBytes());
                }catch(Exception e){}
//                Frame_relation.setVisible(false);                           // Disable Frame relation
                button_addRelation.setEnabled(false);                       // Disable add relation button  
                textfield_errorStream.setText("Message: Relationship Added SuccessFully !! ");
            }else{
                textfield_errorStream.setText("ERROR: Error Creating Releation ");
            }
        }else{                                                       /** Realization **/
                if(className.contains("interface")){
                pattern=classNameSecond+"{";
                if(content.contains(pattern)){
                    className=className.substring(0,(className.length())-9);
                    newString=classNameSecond+space+"implements"+space+className+"{";
                    
                    /*** Interface @Override Functions */                    
                    
                    for(int i=0;i<interfaceMethodSignature.size()-1;i++){
                        if(!interfaceMethodSignature.get(i).equals("abstract")){
                            if(count==0){
                                interfaceSig="\n\n\t @Override\n"+interfaceMethodSignature.get(i);
                                count++;
                            }else{
                                interfaceSig+=("\n"+(interfaceMethodSignature.get(i)));
                            }
                        }else{}
                    }
                    newString+=interfaceSig;
                    
                    /** END @Override */
                    
                    try{
                        content=content.replace(pattern,newString);
                        
                        /*** deleting old content of file */
                        file.close();
                        file =new FileOutputStream(fileName);
                        file.write(content.getBytes());
                    }catch(Exception e){}
//                    Frame_relation.setVisible(false);                           // Disable Frame relation
                    button_addRelation.setEnabled(false);                       // Disable add relation button    
                    count=0;
                    textfield_errorStream.setText("Message: Relationship Added SuccessFully !! ");
                }else{
                    textfield_errorStream.setText("ERROR: Error Creating Releation ");
                }
            }else{}
        }
    }//GEN-LAST:event_button_r_createActionPerformed

    private void button_saveCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_saveCodeActionPerformed
        fileName=textfield_codeName.getText();
//        fileNameEdit=fileName;
        String pattren="^[a-zA-Z]+|[a-zA-Z]+[0-9]$";
           Pattern p=Pattern.compile(pattren);
           Matcher matcher=p.matcher(fileName);
           if(matcher.matches()== true){
                try{
                    fileName="E:\\UCP\\FYP\\Source Code\\ClassDiagramToCode\\src\\resources\\"+fileName;
                    fileName=fileName.concat(".java");
                    fileNameEdit=fileName;
                    file =new FileOutputStream(fileName);
//                    /** Creating A New Copy*/
//                    fileName=textfield_codeName.getText();
//                    fileName=fileName.concat(".java");
//                    file=new FileOutputStream("E:\\UCP\\FYP\\Source Code\\ClassDiagramToCode\\"+fileName);
//                    
//                    /***/
                    
                    
                    data=importName+"\n";
                    file.write(data.getBytes());
                }catch(Exception e){
                    e.getMessage();
                }
                textfield_errorStream.setText("Message: File Created Successfully");
                Frame_codeName.setVisible(false);
                button_addClass.setEnabled(true);
           }else{
               textfield_errorStream.setText("ErrorMessage: Enter a valid File Name");
           }
          textfield_codeName.setText(null);
    }//GEN-LAST:event_button_saveCodeActionPerformed

    private void button_f_parameterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_f_parameterActionPerformed
        countAttribute=0;
        button_AP_method.setEnabled(false);
        if((secondFlagAbstract==1)||(interfaceMethod==1)){          /** For Abstract/Interface Method(s) Signatures  */
            data=r_bracketClose+semiColon+"\n";
            if(methodType.equals("void")){
                methodType=null;
                interMethod=interMethod.concat(r_bracketClose+c_bracketOpen+c_bracketClose);
            }else if(methodType.equals("long")||methodType.equals("int")||methodType.equals("double")||methodType.equals("float")){
                methodType=null;
                interMethod=interMethod.concat(r_bracketClose+c_bracketOpen+"return "+0+semiColon+c_bracketClose);
            }else{
                methodType=null;
                interMethod=interMethod.concat(r_bracketClose+c_bracketOpen+"return "+"\"\""+semiColon+c_bracketClose);
            }            
        }else{              /** For Class Method(s) signatures  */
            if(methodType.equals("void")){
                data=r_bracketClose+c_bracketOpen+c_bracketClose+/*+semiColon+*/"\n";          // if method return type is void
            }else if(methodType.equals("long")||methodType.equals("int")||methodType.equals("double")||methodType.equals("float")){
                data=r_bracketClose+c_bracketOpen+"return "+"0"+semiColon+c_bracketClose+"\n";          //if method return type is int/long
                methodType=null;
            }else{
                data=r_bracketClose+c_bracketOpen+"return "+"\"\""+semiColon+c_bracketClose+"\n"; // if the method return type is string
                methodType=null;
            }
        }
        try{                                        /** Writing meta data to file */
            file.write(data.getBytes());
        }catch(Exception e){
            e.getMessage();
        }
        
        /** Setting Visibility and Enable/disable button(s)/ Frame(s)  */
        
        button_AM_method.setEnabled(true);
        button_f_method.setEnabled(true);
        textfiled_N_method.setEditable(true);
        Frame_AddingAttribute.setVisible(false);
        interfaceMethodSignature.add(interMethod);
        interfaceMethods.add(interMethod);          
    }//GEN-LAST:event_button_f_parameterActionPerformed

    private void button_A_parameterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_A_parameterActionPerformed
        String returnType=ComboBox_RT_parameter.getSelectedItem().toString();
        String name=textfiled_N_parameter.getText();
        String pattren="^[a-zA-Z]+|[a-zA-Z]+([a-zA-Z0-9]+)$";
        Pattern p=Pattern.compile(pattren);
        Matcher matcher=p.matcher(name);
        
        if(matcher.matches()==false){
            textfield_errorStream.setText("ERROR Message: Enter a Valid Parameter Name ");
        }else if(name.equals("")){
            textfield_errorStream.setText("ERROR Message: Enter the Name of Parameter ");
        }else if(attributesName.contains(name)){
            textfield_errorStream.setText("ERROR Message: Multiple same Parameter name are not allowed !!");
        }else{
//            textfield_errorStream.setText(null);
            if(countAttribute==0){
                data=returnType+space+name;
                if(interfaceMethod==1){
                    interMethod=interMethod.concat(data);                           // getting the parameter Interface
                }
                if(secondFlagAbstract==1){
                    interMethod=interMethod.concat(data);                                              // getting the parameter For Abstract
                }
                try{
                    file.write(data.getBytes());
                }catch(Exception e){
                    e.getMessage();
                }
                countAttribute++;
            }else{
                data=coma+returnType+space+name;
                if((secondFlagAbstract==1)||(interfaceMethod==1)){
                    interMethod=interMethod.concat(data);                      // getting the parameter for Both Abstract/Interface
                }
                try{
                    file.write(data.getBytes());
                }catch(Exception e){
                    e.getMessage();
                }
            }
            attributesName.add(name);
            textfiled_N_parameter.setText(null);
            textfield_errorStream.setText("MESSAGE: Paramter Name Added Sucssesfully !!");
        }
        textfiled_N_parameter.setText(null);
    }//GEN-LAST:event_button_A_parameterActionPerformed

    private void textfiled_N_parameterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfiled_N_parameterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfiled_N_parameterActionPerformed

    private void ComboBox_RT_parameterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_RT_parameterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_RT_parameterActionPerformed

    private void button_F_dataMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_F_dataMemberActionPerformed
        String name=className.get(noOfClasses);
        if(flagAbstract==0){
            try{
                data="\n\t"+name+r_bracketOpen+r_bracketClose+c_bracketOpen+c_bracketClose+"\n"; // testing this for tabbing
                file.write(data.getBytes());
            }catch(Exception e){
                e.getMessage();
            }
        }else{}
        noOfClasses++;
        button_addDataMember.setEnabled(false);
        button_addMethods.setEnabled(true);
        Frame_dataMember.setVisible(false);
    }//GEN-LAST:event_button_F_dataMemberActionPerformed

    private void button_A_dataMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_A_dataMemberActionPerformed
        addDataMember();
        textfiled_n_DataMember.setText(null);
    }//GEN-LAST:event_button_A_dataMemberActionPerformed

    private void textfiled_n_DataMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfiled_n_DataMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfiled_n_DataMemberActionPerformed

    private void ComboBox_RT_dataMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_RT_dataMemberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_RT_dataMemberActionPerformed

    private void button_f_methodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_f_methodActionPerformed
        data=/*"\t"+*/c_bracketClose;  
        try{                                     /** Writing contents to file*/
            file.write(data.getBytes());
        }catch(Exception e){
            e.getMessage();
        }
        if(noOfClasses>=2){                     /** Setting visibility if no.of classes >= 2 */
            button_addRelation.setEnabled(true);

        }
        if(flagInterface==1){                   /** Setting the value of flagInterface=0*/
            flagInterface=0;
        }
                 
         /** Setting Visibility and Enable/disable button(s)/ Frame(s)  */    
            
        ComboBox_T_method.setEnabled(true);
        button_buildClass.setEnabled(true);
        button_generateCode.setEnabled(true);
        button_addMethods.setEnabled(false);
        button_addClass.setEnabled(true);
        Frame_AddingMethod.setVisible(false);
        flagAbstract=0;
        interfaceMethod=0; 
        secondFlagAbstract=0;
    }//GEN-LAST:event_button_f_methodActionPerformed

    private void button_AP_methodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_AP_methodActionPerformed
        Frame_AddingAttribute.setVisible(true);
    }//GEN-LAST:event_button_AP_methodActionPerformed

    private void button_AM_methodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_AM_methodActionPerformed
        String returnType=ComboBox_RT_method.getSelectedItem().toString();
        String type=ComboBox_T_method.getSelectedItem().toString();
        String name=textfiled_N_method.getText();
        String pattren="^[a-zA-Z]+|[a-zA-Z]+([a-zA-Z0-9]+)$";
        Pattern p=Pattern.compile(pattren);
        Matcher matcher=p.matcher(name);
        
        if(matcher.matches()==false){
            textfield_errorStream.setText("ERROR Message: Enter a Valid Method Name !!  ");
        }else if(name.equals("")){
            textfield_errorStream.setText("ERROR Message: Enter The Name Of Method !!  ");
        }else if(methodNames.contains(name)){
            textfield_errorStream.setText("ERROR Message: Multiple Same method Name Are Not Allowed !!");
        }else if(flagAbstract==1){
          methodType=returnType;                                          // return type of method having Abstract
            data="\t"+type+space+"abstract"+space+returnType+space+name+r_bracketOpen;       
            interMethod=data;                                               // getting the Signature of Methods
            try{
                file.write(data.getBytes());
            }catch(Exception e){
                e.getMessage();
            }
            methodNames.add(name);
            textfield_errorStream.setText("MESSAGE: Method Name added Sucssesfully !!");            
            button_AP_method.setEnabled(true);
            textfiled_N_method.setEditable(false);
            button_AM_method.setEnabled(false);
            button_f_method.setEnabled(false);
        }else{
          methodType=returnType;                                          // return type of method
            data="\t"+type+space+returnType+space+name+r_bracketOpen;
            if(interfaceMethod==1){
                interMethod=data;                                              // interface Method signature
            }
            try{
                file.write(data.getBytes());
            }catch(Exception e){
                e.getMessage();
            }
            methodNames.add(name);
            textfield_errorStream.setText("MESSAGE: Method Name added Sucssesfully !!");            
            button_AP_method.setEnabled(true);
            textfiled_N_method.setEditable(false);
            button_AM_method.setEnabled(false);
            button_f_method.setEnabled(false);
        }
//            flagAbstract=0;
        textfiled_N_method.setText(null);
    }//GEN-LAST:event_button_AM_methodActionPerformed

    private void textfiled_N_methodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfiled_N_methodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfiled_N_methodActionPerformed

    private void ComboBox_RT_methodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_RT_methodActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBox_RT_methodActionPerformed

    private void button_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_addActionPerformed
        String type=ComboBox_type.getSelectedItem().toString();
        String name=textfiled_name.getText();
        String pattren="^[a-zA-Z]+|[a-zA-Z]+([a-zA-Z0-9]+)$";
        Pattern p=Pattern.compile(pattren);
        Matcher matcher=p.matcher(name);
           

        /*** removing data from the arrayList for new entries */

        dataMembers.clear();
        methodNames.clear();
        attributesName.clear();
        
        /** End of ArrayList */
        if(matcher.matches()==false){
            textfield_errorStream.setText("ERROR Message: Enter Valid Name of class !!");
        }else if(name.equals("")){
            textfield_errorStream.setText("ERROR Message: Enter the Name of class/interface !!");
        }else if(className.contains(name)){
            textfield_errorStream.setText("ERROR Message: Multiple Same class Name Are Not Allowed !!");
        }else{
          if(type.equals("interface")){
                flagInterface=1;
                interfaceMethod=1;
                data="\n"+type+space+name+c_bracketOpen+"\n";
                try{
                    file.write(data.getBytes());
                    name=name.concat("interface");
                }catch(Exception e){
                    e.getMessage();
                }
            }else if(type.equals("abstract")){
                flagAbstract=1;
                secondFlagAbstract=1;
                data="\n"+type+space+"class"+space+name+c_bracketOpen+"\n";
                try{
                    file.write(data.getBytes());
                    name=name.concat("Abstract");
                }catch(Exception e){
                    e.getMessage();
                }
            }else{
                data="\n"+type+space+name+c_bracketOpen+"\n";   // testing the phase(tabbing)
                try{
                    file.write(data.getBytes());
                }catch(Exception e){
                    e.getMessage();
                }
                countAddClass++;
            }
            textfield_errorStream.setText("MESSAGE: Class/InterFace/Abstract Name Added Sucssesfully !!");
            
            if(flagAbstract==1||interfaceMethod==1){
                ComboBox_T_method.setEnabled(false);
            }            
            if(flagInterface==1){
                noOfClasses++;
                button_addMethods.setEnabled(true);
                button_addClass.setEnabled(false);
            }else{
                button_addDataMember.setEnabled(true);
                button_addClass.setEnabled(false);
            }
            className.add(name);
            Frame_ClassName.setVisible(false);
            ComboBox_type.setSelectedItem(ComboBox_type.getItemAt(0));
        }
        textfiled_name.setText(null);
    }//GEN-LAST:event_button_addActionPerformed

    private void textfiled_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfiled_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfiled_nameActionPerformed

    private void ComboBox_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_typeActionPerformed
//        String string=ComboBox_type.getSelectedItem().toString();
//        button_add.setEnabled(true);
//        if((string.equals("interface"))||(string.equals("abstract"))){
//            if(countClass>=1){                  //                ComboBox_returnType.setVisible(false);
//                button_add.setEnabled(false);
//            }else{}                              //                ComboBox_returnType.setVisible(false);
//        }else if(string.equals("class")){
//            countClass++;                        //            ComboBox_returnType.setVisible(true);
//        }
    }//GEN-LAST:event_ComboBox_typeActionPerformed

    private void button_generateCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_generateCodeActionPerformed
        new generateCode().setVisible(true);
    }//GEN-LAST:event_button_generateCodeActionPerformed

    private void menuItem_helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_helpActionPerformed
       JOptionPane.showMessageDialog(this,message,"Help",1);
    }//GEN-LAST:event_menuItem_helpActionPerformed

    private void ComboBox_T_methodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox_T_methodActionPerformed
   
    }//GEN-LAST:event_ComboBox_T_methodActionPerformed

    private void button_r_finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_r_finishActionPerformed
        Frame_relation.setVisible(false);
    }//GEN-LAST:event_button_r_finishActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DesignView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DesignView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DesignView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DesignView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new DesignView().setVisible(true);
            }
        });
    }
    FileOutputStream file;
    FileInputStream fileInput;
    String methodType,data,newFile,fileName,fileNameEdit,c_bracketOpen="{",c_bracketClose="}",r_bracketOpen="(",r_bracketClose=")",openPath,editPath,interMethod;
    String space=" ",coma=",",semiColon=";",importName="package Resources;",editContent,message="Every Component is self explainatry for further more info mail @ contact@fahadkhan.net";
    public ArrayList<String> className,methodNames,dataMembers,attributesName,interfaceMethods,interfaceMethodSignature;
    public static String content;
    static int countAddClass=0,countFirst=0,countClass=0,noOfClasses=0,flagInterface=0,secondFlagAbstract=0,countAttribute=0,flagAbstract=0,interfaceMethod=0; 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckBox_dataMember;
    private javax.swing.JComboBox ComboBox_RT_dataMember;
    private javax.swing.JComboBox ComboBox_RT_method;
    private javax.swing.JComboBox ComboBox_RT_parameter;
    private javax.swing.JComboBox ComboBox_T_DataMember;
    private javax.swing.JComboBox ComboBox_T_method;
    private javax.swing.JComboBox ComboBox_Type_relation;
    private javax.swing.JComboBox ComboBox_classNameSecond_releation;
    private javax.swing.JComboBox ComboBox_className_releation;
    private javax.swing.JComboBox ComboBox_type;
    private javax.swing.JInternalFrame Frame_AddingAttribute;
    private javax.swing.JInternalFrame Frame_AddingMethod;
    private javax.swing.JInternalFrame Frame_ClassName;
    private javax.swing.JInternalFrame Frame_codeName;
    private javax.swing.JInternalFrame Frame_dataMember;
    private javax.swing.JInternalFrame Frame_relation;
    private javax.swing.JButton button_AM_method;
    private javax.swing.JButton button_AP_method;
    private javax.swing.JButton button_A_dataMember;
    private javax.swing.JButton button_A_parameter;
    private javax.swing.JButton button_F_dataMember;
    private javax.swing.JButton button_add;
    private javax.swing.JButton button_addClass;
    private javax.swing.JButton button_addDataMember;
    private javax.swing.JButton button_addMethods;
    private javax.swing.JButton button_addRelation;
    private javax.swing.JButton button_buildClass;
    private javax.swing.JButton button_f_method;
    private javax.swing.JButton button_f_parameter;
    private javax.swing.JButton button_generateCode;
    private javax.swing.JButton button_r_create;
    private javax.swing.JButton button_r_finish;
    private javax.swing.JButton button_saveCode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label_designView;
    private javax.swing.JMenuItem menuItem_CreateNew;
    private javax.swing.JMenuItem menuItem_edit;
    private javax.swing.JMenuItem menuItem_exit;
    private javax.swing.JMenuItem menuItem_help;
    private javax.swing.JMenuItem menuItem_open;
    private javax.swing.JMenu menu_File;
    private javax.swing.JMenu menu_Help;
    private javax.swing.JTextField textfield_codeName;
    private javax.swing.JTextField textfield_errorStream;
    private javax.swing.JTextField textfiled_N_method;
    private javax.swing.JTextField textfiled_N_parameter;
    private javax.swing.JTextField textfiled_n_DataMember;
    private javax.swing.JTextField textfiled_name;
    // End of variables declaration//GEN-END:variables
}
